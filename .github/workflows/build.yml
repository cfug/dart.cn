name: build

on:
  # Run on PRs and pushes to the default branch.
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  # schedule:
  #   # Run build check every day at 3 AM PST.
  #   - cron: "0 11 * * 0"

# Declare default permissions as read only.
permissions: read-all

env:
  # Configure analytics reporting for pub.
  PUB_ENVIRONMENT: bot.github

jobs:
  build:
    name: Build site and check links
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8
      - uses: dart-lang/setup-dart@e51d8e571e22473a2ddebf0ef8a2123f0ab2c02c
        with:
          sdk: beta
      - name: Fetch Dart packages
        run: dart pub get
      - name: Install firebase-tools
        run: curl -sL https://firebase.tools | bash
      - name: Build site
        run: dart run dash_site build
      - uses: actions/setup-node@v6
        with:
          node-version: 22
      - name: Translated (dart.cn)
        run: bash tool/translator/build.sh
        shell: bash
      - name: Check for broken Markdown links
        run: dart run dash_site check-link-references
      - name: Check internal site links are functional
        run: dart run dash_site check-links

  deploy:
    name: Deploy to production
    permissions:
      checks: write
      pull-requests: write
    if: ${{ github.event_name == 'push' &&
            github.ref == 'refs/heads/main' &&
            github.repository == 'cfug/dart.cn' }}
    needs: [build]
    runs-on: ubuntu-latest
    env:
      FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
      FIREBASE_PROJECT: default
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8
        with:
          # dart.cn | https://github.com/cfug/flutter.cn/pull/1518
          fetch-depth: 0
      - uses: dart-lang/setup-dart@e51d8e571e22473a2ddebf0ef8a2123f0ab2c02c
        with:
          sdk: beta
      - name: Fetch Dart packages
        run: dart pub get
      - name: Build site
        run: dart run dash_site build --release
      - uses: actions/setup-node@v6
        with:
          node-version: 22
      - name: Translated (dart.cn)
        run: bash tool/translator/build.sh
        shell: bash
      - name: Deploy to production
        run: bash tool/translator/deploy-cn.sh
        shell: bash
        env:
          DEPLOY_TOKEN: ${{ secrets.DEPLOY_TOKEN }}
