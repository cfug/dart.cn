name: build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

# Declare default permissions as read only.
permissions: read-all

env:
  # Keep for Dart SDK reporting
  PUB_ENVIRONMENT: bot.github
  NODE_ENV: production
  # LTS
  NODE_VERSION: '18'
  # Tool location
  BASE_DIR: ${{ github.workspace }}
  TOOL_DIR: ${{ github.workspace }}/tool

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        sdk: [stable, beta]
    steps:
      - uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c
        with:
          submodules: recursive
      - uses: dart-lang/setup-dart@a57a6c04cf7d4840e88432aad6281d1e125f0d46
        with:
          sdk: ${{ matrix.sdk }}
      - run: dart pub get
      - run: tool/test.sh
        env:
          DART_CHANNEL: ${{ matrix.sdk }}

  deploy:
    permissions:
      checks: write
      pull-requests: write
    if: ${{ github.event_name == 'push' &&
            github.ref == 'refs/heads/main' &&
            github.repository == 'cfug/dart.cn' }}
    needs: test
    runs-on: ubuntu-latest
    env:
      FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
      FIREBASE_PROJECT: default
    steps:
      - uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c
        with:
          submodules: recursive
      - run: make build
      - run: make write-prod-robots
      - uses: actions/setup-node@64ed1c7eab4cce3362f8c340dee64e5eaeef8f7c
        with:
          node-version: ${{ env.NODE_VERSION }}
      - uses: dart-lang/setup-dart@a57a6c04cf7d4840e88432aad6281d1e125f0d46
        with:
          sdk: stable
      #- run: tool/check-links.sh
      - run: make deploy
        env:
          DEPLOY_TOKEN: ${{ secrets.DEPLOY_TOKEN }}
